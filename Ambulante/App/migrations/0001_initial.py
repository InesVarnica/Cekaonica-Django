# Generated by Django 4.1 on 2022-08-05 16:07

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Posjeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datum', models.DateTimeField(auto_now_add=True)),
                ('status_otpusta', models.CharField(choices=[('K', 'Kući'), ('H', 'Hospitalizacija'), ('O', 'Opservacija'), ('PP', 'Prekinut pregled')], max_length=50)),
                ('vrijeme_otpusta', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Radilišta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('klinika', models.CharField(choices=[('KIR', 'Kirurgija'), ('PED', 'Pedijatrija'), ('INT', 'Unutarnje bolesti'), ('ORT', 'Otorinolaringologija'), ('NRL', 'Neurologija'), ('GIN', 'Ginekologija'), ('PSI', 'Psihijatrija'), ('KOZ', 'Kožne bolesti')], max_length=50)),
                ('naziv', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='RegistarPacijenata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('MBO', models.IntegerField(blank=True, null=True)),
                ('ime', models.CharField(max_length=50)),
                ('prezime', models.CharField(max_length=50)),
                ('datum_rođenja', models.CharField(blank=True, max_length=11, null=True)),
                ('email', models.EmailField(blank=True, max_length=50, null=True)),
                ('broj_telefona', models.IntegerField(blank=True, null=True)),
                ('adresa', models.CharField(blank=True, max_length=50, null=True)),
                ('status_osiguranja', models.CharField(blank=True, choices=[('DA', 'Važeće'), ('NE', 'Nevažeće')], max_length=50)),
                ('datum_police_osiguranja', models.CharField(blank=True, max_length=11, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Uputnice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tip', models.CharField(choices=[('A1', 'Konzilijarni pregled'), ('A2', 'Kontrolni konzilijarni pregled'), ('C1', 'Pregled i cjelovita obrada u specijalističkoj zdravstvenoj zaštiti'), ('C2', 'Pregled i obrada kroz Objedinjeni hitni bolnički prijam'), ('D1', 'Ambulantno liječenje'), ('D2', ' Dnevna bolnica'), ('NEMA', 'Bez_uputnice')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ŠifrarnikUtrošak',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('šifra', models.CharField(max_length=6)),
                ('naziv', models.CharField(max_length=100)),
                ('cijena', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Korisnik',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('dr', 'liječnik'), ('spec', 'specijalist'), ('admin', 'administrator'), ('ms', 'medicinska sestra'), ('vms', 'viša medicinska sestra')], max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Utrošak_posjeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('količina_utroška', models.IntegerField(blank=True, null=True)),
                ('posjeta', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='utrošak_posjeta', to='App.posjeta')),
                ('utrošak', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='utrošak_posjeta', to='App.šifrarnikutrošak')),
            ],
        ),
        migrations.CreateModel(
            name='Radilište_korisnik',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('radilište', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='radilište_korisnik', to='App.radilišta')),
                ('zaposlenik', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='radilište_korisnik', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='posjeta',
            name='naziv_radilišta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posjeta', to='App.radilišta'),
        ),
        migrations.AddField(
            model_name='posjeta',
            name='pacijent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posjeta', to='App.registarpacijenata'),
        ),
        migrations.AddField(
            model_name='posjeta',
            name='uputnica',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posjeta', to='App.uputnice'),
        ),
        migrations.AddField(
            model_name='posjeta',
            name='zaposlenik',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posjeta', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Nalaz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dijagnoza', models.CharField(blank=True, max_length=5, null=True)),
                ('naziv_nalaza', models.CharField(max_length=50)),
                ('razlog_dolaska', models.TextField(blank=True, max_length=200, null=True)),
                ('anamneza', models.TextField(blank=True, max_length=200, null=True)),
                ('terapija', models.TextField(blank=True, max_length=200, null=True)),
                ('zaključak', models.TextField(blank=True, max_length=200, null=True)),
                ('naziv_radilišta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nalaz', to='App.radilišta')),
                ('posjeta', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nalazi', to='App.posjeta')),
                ('zaposlenik', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nalaz', to=settings.AUTH_USER_MODEL)),
                ('zaposlenik2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nalaz2', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Blagajna',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cijena', models.FloatField()),
                ('posjeta', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blagajna', to='App.posjeta')),
                ('zaposlenik', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blagajna', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
